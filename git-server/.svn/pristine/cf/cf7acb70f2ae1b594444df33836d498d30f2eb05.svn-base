package com.aos.tray;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.aos.ingredient.IngredientServiceImpl;

@RestController
public class TrayController {
	@Autowired
	TrayServiceImpl trayService;
	
	@GetMapping("/tray/form")
	public ModelAndView registTray() throws Exception {
		ModelAndView mov = new ModelAndView();
		
		mov.addObject("trayNo", trayService.getTrayNo());
		
//		TODO 식자재 이름 가져다가 전송해 줘야함
//		mov.addObject(attributeName, attributeValue);
		
		return new ModelAndView("/tray/trayRegistForm");
	}
	
	@PostMapping("/tray")
	public ModelAndView registTray(Tray tray) throws Exception {
		trayService.registTray(tray);
		
		return new ModelAndView("redirect:/tray");
	}
	
	@GetMapping("/tray/{no}")
	public ModelAndView viewTray(@PathVariable String no) throws Exception {
		Tray tray = new Tray();
		tray.setNo(no);
		
		ModelAndView mov = new ModelAndView();
		mov.addObject("tray", trayService.viewTray(tray));
		mov.setViewName("/tray/trayView");
		
		return mov;
	}
	
	@GetMapping("/tray")
	public ModelAndView trayList() throws Exception {
		List<Tray> list = trayService.trayList();
		
		ModelAndView mov = new ModelAndView();
		mov.addObject("trayList", list);
		mov.setViewName("/tray/trayList");
		
		return mov;
	}
	
	@GetMapping("/tray/{no}/editform")
	public ModelAndView editTray(@PathVariable String no) throws Exception {
		ModelAndView mov = new ModelAndView();
		
		Tray tray = new Tray();
		tray.setNo(no);
		tray = trayService.viewTray(tray);
		
		mov.addObject("tray", tray);
		mov.setViewName("/tray/trayEditForm");
		
		return mov;
	}
	
	@PutMapping("/tray")
	public ModelAndView editTray(Tray tray) throws Exception {
		trayService.editTray(tray);
		
		return new ModelAndView("redirect:/tray");
	}
	
	@DeleteMapping("/tray")
	public ModelAndView deleteSupplier(Tray tray) throws Exception {
		trayService.deleteTray(tray);
		return null;
	}
}
