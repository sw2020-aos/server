package com.aos.requestorder;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.Properties;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

@RestController
@RequestMapping("/aos")
public class RequestOrderController {
	@Autowired
	private RequestOrderServiceImpl requestOrderServiceImpl;
	
	//test method
	@GetMapping("/requestorderinfo.do")
	public String test() {
		int trayNo = 3;
		double weight = 21;
		boolean status = requestOrderServiceImpl.registRequestOrderInfo(trayNo, weight);
		
		Properties pro = new Properties();
		try {
			File upperDir = new File("src\\main\\resources" + File.separator + "income.properties");
			pro.load(new FileInputStream(upperDir.getAbsoluteFile()));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		pro.setProperty(trayNo+".tray.weight", String.valueOf(weight));
		pro.setProperty(trayNo+".tray.status", String.valueOf(status));
		
		try {
			File upperDir = new File("src\\main\\resources" + File.separator + "income.properties");
			pro.store(new FileOutputStream(upperDir.getAbsoluteFile()), "");
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		System.out.println(trayNo+".tray.weight : " + pro.get(trayNo+".tray.weight"));
		System.out.println(trayNo+".tray.status : " + pro.get(trayNo+".tray.status"));
		
		if(status) {
			System.out.println("발주등록");
		} else {
			System.out.println("이미 발주가 완료된 상태, 만약 발주 상태가 O였다면 C로 변환");
		}
		
		return null;
	}
	//-test method
	
	@GetMapping("/requestorderinfo")
	public ModelAndView requestOrderList() {
		ModelAndView modelAndView = new ModelAndView();
		List<RequestOrderInfo> result = requestOrderServiceImpl.requestOrderList();
		System.out.println("result: " + result);
		modelAndView.setViewName("/requestorder/requestOrderList");
		modelAndView.addObject("data", result);
		return modelAndView;
	}
	
	@GetMapping("/requestorderinfo/{date}")
	public ModelAndView requestOrderList(@PathVariable String date) {
		ModelAndView modelAndView = new ModelAndView();
		RequestOrder requestOrder = new RequestOrder();
		requestOrder.setOrderDate(date);
		System.out.println("incomeDate: " + date);
		RequestOrderInfo result = requestOrderServiceImpl.viewRequestOrder(requestOrder);
		modelAndView.setViewName("/requestorder/requestOrderView");
		modelAndView.addObject("data", result);
		return modelAndView;
	}
	
	@PostMapping(value = "/requestorderinfo", consumes=MediaType.APPLICATION_FORM_URLENCODED_VALUE) // GET -> POST변경, 반환타입: List<Ingredient> -> Map<String, String> 변경
	public List<RequestOrderInfo> searchIngredisent(String income) {
		System.out.println("income: "+income);
		List<RequestOrderInfo> result = requestOrderServiceImpl.searchRequestOrder(income);
		return result;
	}
}
