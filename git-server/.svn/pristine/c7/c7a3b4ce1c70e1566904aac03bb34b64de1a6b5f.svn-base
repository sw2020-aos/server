package com.aos.supplier;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.aos.ingredient.IngredientServiceImpl;

@RestController
@RequestMapping("/aos")
public class SupplierController {
	@Autowired
	private SupplierServiceImpl supplierServiceImpl;

	@Autowired
	private IngredientServiceImpl ingredientServiceImpl;

	@GetMapping("/supplier/form")
	public ModelAndView registSupplier() {
		ModelAndView mav = new ModelAndView("/supplier/supplierRegistForm");
		mav.addObject("ingredients", ingredientServiceImpl.ingredients());

		return mav;
	}

	@PostMapping("/supplier/regist")
	public ModelAndView registSupplier(Supplier supplier, String[] handlingIngredients) {
		supplierServiceImpl.registSupplier(supplier, handlingIngredients);
		return new ModelAndView("redirect:/aos/supplier");
	}

	@GetMapping("/supplier/{no}")
	public ModelAndView viewSupplier(@PathVariable String no) {
		ModelAndView mav = new ModelAndView("/supplier/supplierView");
		Supplier supplier = new Supplier();

		supplier.setNo(no);
		supplier = supplierServiceImpl.viewSupplier(supplier);
		Map<String, String> handlingIngredientList = supplierServiceImpl.handlingListBySupplierNo(supplier);

		mav.addObject("supplier", supplier);
		mav.addObject("ingredients", handlingIngredientList);

		return mav;
	}

	@GetMapping("/supplier")
	public ModelAndView supplierList() {
		ModelAndView mav = new ModelAndView("/supplier/supplierList");
		mav.addObject("supplierList", supplierServiceImpl.supplierList());

		return mav;
	}

	@PostMapping(value = "/supplier", consumes = MediaType.APPLICATION_FORM_URLENCODED_VALUE)
	public List<Supplier> searchSupplier(String keyword) {
		return supplierServiceImpl.selectResultList(keyword);
	}

	@GetMapping("/supplier/{no}/editform")
	public ModelAndView editSupplier(@PathVariable String no) {
		ModelAndView mav = new ModelAndView("/supplier/supplierEditForm");
		Supplier supplier = new Supplier();
		supplier.setNo(no);

		mav.addObject("supplier", supplierServiceImpl.viewSupplier(supplier));
		mav.addObject("ingredients", ingredientServiceImpl.ingredients());

		return mav;
	}

	@PutMapping("/supplier")
	public ModelAndView editSupplier(Supplier supplier, String[] handlingIngredients) {
		ModelAndView mav = new ModelAndView("redirect:/aos/supplier");
		supplierServiceImpl.editSupplier(supplier, handlingIngredients);
		return mav;
	}

	@DeleteMapping("/supplier")
	public ModelAndView deleteSupplier(String no) {
		ModelAndView mav = new ModelAndView("redirect:/aos/supplier");
		Supplier supplier = new Supplier();
		supplier.setNo(no);
		if(supplierServiceImpl.deleteSupplier(supplier).equals("success")) {
			System.out.println("Delete Supplier Success");
			//해당 거래처가 트레이에 등록된 식자재의 주 거래처로 설정된 것이 없어 정상적으로 삭제. 
		} else {
			System.out.println("Delete Supplier Fail");
			//해당 거래처가 트레이에 등록된 식자재의 주 거래처로 설정된 것이 있어서 거래처를 삭제하지 못함. 
		}
		return mav;
	}

	@PostMapping("/supplier/check")
	public boolean checkSupplier(String name) {
		return supplierServiceImpl.checkSupplier(name);

	}
}
